[url-constructor.any.worker.html]
  [Parsing: <non-special://test:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://f:999999/c> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////bar.com/> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo:////://///> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <ssh://example.com/foo/bar.git> against <http://example.org/>]
    expected: FAIL

  [Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <  File:c|////foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </C|\\foo\\bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://localhost> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/test> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e%2> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%41%7a> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%00%51> against <about:blank>]
    expected: FAIL

  [Parsing: <http://www/foo%2Ehtml> against <about:blank>]
    expected: FAIL

  [Parsing: <httpa://foo:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:70/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:443/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example example.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://Goo%20 goo%7C|.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://GOO 　goo.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://a.b.c.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.Xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://％４１.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <sc://faß.ExAmPlE/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://192.168.0.1 hello> against <http://other.com/>]
    expected: FAIL

  [Parsing: <https://x x:12> against <about:blank>]
    expected: FAIL

  [Parsing: <http://[::1.2.3.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.2.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <notspecial://host/?'> against <about:blank>]
    expected: FAIL

  [Parsing: <i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: </i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: </i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <about:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <data:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ.test/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://%/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://te@s:t@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:12/> against <about:blank>]
    expected: FAIL

  [Parsing: <x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <wow:￿> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\x00b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a[b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\\b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\]b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a^b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\tst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\nst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\rst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%20st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%23st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Est/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%40st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%7Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://\x01\x02\x03\x04\x05\x06\x07\x08\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43|> against <about:blank>]
    expected: FAIL

  [Parsing: <file://C%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43|/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <..> against <file:///C:/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file:///C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file://h/C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//d:> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <//d:/..> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <file:\\\\//> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\?fox> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\#guppy> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\localhost//> against <about:blank>]
    expected: FAIL

  [Parsing: <file://\\/localhost//cat> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost//a//../..//> against <about:blank>]
    expected: FAIL

  [Parsing: </////mouse> against <file:///elephant>]
    expected: FAIL

  [Parsing: <\\/localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <//localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <C|> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|> against <file://host/D:/dir1/dir2/file>]
    expected: FAIL

  [Parsing: <C|#> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|?> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\n/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\\> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|a> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: </c|/foo/bar> against <file:///c:/baz/qux>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/>]
    expected: FAIL

  [Parsing: <//C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file:/C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://localhost//a//../..//foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <sc://ñ> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ?x> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ#x> against <about:blank>]
    expected: FAIL

  [Parsing: <#x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <?x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <sc://?> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://#> against <about:blank>]
    expected: FAIL

  [Parsing: <///> against <sc://x/>]
    expected: FAIL

  [Parsing: <////> against <sc://x/>]
    expected: FAIL

  [Parsing: <////x/> against <sc://x/>]
    expected: FAIL

  [Parsing: <tftp://foobar.com/someconfig;mode=netascii> against <about:blank>]
    expected: FAIL

  [Parsing: <telnet://user:pass@foobar.com:23/> against <about:blank>]
    expected: FAIL

  [Parsing: <ut2004://10.10.10.10:7777/Index.ut2> against <about:blank>]
    expected: FAIL

  [Parsing: <redis://foo:bar@somehost:6379/0?baz=bam&qux=baz> against <about:blank>]
    expected: FAIL

  [Parsing: <rsync://foo@host:911/sup> against <about:blank>]
    expected: FAIL

  [Parsing: <git://github.com/foo/bar.git> against <about:blank>]
    expected: FAIL

  [Parsing: <irc://myserver.com:6999/channel?passwd> against <about:blank>]
    expected: FAIL

  [Parsing: <dns://fw.example.org:9999/foo.bar.org?type=TXT> against <about:blank>]
    expected: FAIL

  [Parsing: <ldap://localhost:389/ou=People,o=JNDITutorial> against <about:blank>]
    expected: FAIL

  [Parsing: <git+https://github.com/foo/bar> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: </.//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: </..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <a/..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <path> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <../path> against <non-spec:/.//p>]
    expected: FAIL

  [Parsing: <non-special://%E2%80%A0/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://H%4fSt/path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:5:0:0:0\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:0:0:0:3\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2::3\]:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-slash.html> against <a://>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-slash-b.html> against <a://b>]
    expected: FAIL

  [Parsing: <non-spec://example.org/test?a#b\x00c> against <about:blank>]
    expected: FAIL

  [Parsing: <file://xn--/p> against <about:blank>]
    expected: FAIL

  [Parsing: <foo:// !"$%&'()*+,-.;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss:// !"$%&'()*+,-.;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://joe: !"$%&'()*+,-.:;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://joe: !"$%&'()*+,-.:;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/? !"$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/# !"#$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc://host/path>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc:/path>]
    expected: FAIL

  [Parsing: <abc:/rooted> against <abc://host/path>]
    expected: FAIL

  [Parsing: <h://.> against <about:blank>]
    expected: FAIL

  [Parsing: <file://loC𝐀𝐋𝐇𝐨𝐬𝐭/usr/bin> against <about:blank>]
    expected: FAIL

  [Parsing: </C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: </c:/foo/bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\\\.\\y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:..> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\\\.\\Y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:?q=v> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\x\\hello> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:\\c:\\foo\\bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/example.com/> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <c:/foo> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/example.com/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:a> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-b.html> against <a:b>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon.html> against <a:>]
    expected:
      if os == "win": FAIL

  [Parsing: <a:\t foo.com> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:...> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash.html> against <a:/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:#frag> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///./y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash-b.html> against <a:/b>]
    expected:
      if os == "win": FAIL

  [Parsing: </c:/foo/bar> against <file://host/path>]
    expected:
      if os == "win": FAIL


[url-constructor.any.html]
  [Parsing: <non-special://test:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://f:999999/c> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////bar.com/> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo:////://///> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <ssh://example.com/foo/bar.git> against <http://example.org/>]
    expected: FAIL

  [Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <  File:c|////foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </C|\\foo\\bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://localhost> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/test> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e%2> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%41%7a> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%00%51> against <about:blank>]
    expected: FAIL

  [Parsing: <http://www/foo%2Ehtml> against <about:blank>]
    expected: FAIL

  [Parsing: <httpa://foo:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:70/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:443/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example example.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://Goo%20 goo%7C|.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://GOO 　goo.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://a.b.c.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.Xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://％４１.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <sc://faß.ExAmPlE/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://192.168.0.1 hello> against <http://other.com/>]
    expected: FAIL

  [Parsing: <https://x x:12> against <about:blank>]
    expected: FAIL

  [Parsing: <http://[::1.2.3.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.2.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <notspecial://host/?'> against <about:blank>]
    expected: FAIL

  [Parsing: <i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: </i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: </i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <about:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <data:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <javascript:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <mailto:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ.test/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://%/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://te@s:t@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:12/> against <about:blank>]
    expected: FAIL

  [Parsing: <x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <wow:￿> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\x00b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a[b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\\b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\]b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a^b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\tst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\nst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\rst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%20st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%23st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Est/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%40st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%7Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://\x01\x02\x03\x04\x05\x06\x07\x08\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43|> against <about:blank>]
    expected: FAIL

  [Parsing: <file://C%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43|/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <..> against <file:///C:/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file:///C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file://h/C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//d:> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <//d:/..> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <file:\\\\//> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\?fox> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\#guppy> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\localhost//> against <about:blank>]
    expected: FAIL

  [Parsing: <file://\\/localhost//cat> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost//a//../..//> against <about:blank>]
    expected: FAIL

  [Parsing: </////mouse> against <file:///elephant>]
    expected: FAIL

  [Parsing: <\\/localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <//localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <C|> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|> against <file://host/D:/dir1/dir2/file>]
    expected: FAIL

  [Parsing: <C|#> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|?> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\n/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\\> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|a> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: </c|/foo/bar> against <file:///c:/baz/qux>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/>]
    expected: FAIL

  [Parsing: <//C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file:/C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://localhost//a//../..//foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <sc://ñ> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ?x> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ#x> against <about:blank>]
    expected: FAIL

  [Parsing: <#x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <?x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <sc://?> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://#> against <about:blank>]
    expected: FAIL

  [Parsing: <///> against <sc://x/>]
    expected: FAIL

  [Parsing: <////> against <sc://x/>]
    expected: FAIL

  [Parsing: <////x/> against <sc://x/>]
    expected: FAIL

  [Parsing: <tftp://foobar.com/someconfig;mode=netascii> against <about:blank>]
    expected: FAIL

  [Parsing: <telnet://user:pass@foobar.com:23/> against <about:blank>]
    expected: FAIL

  [Parsing: <ut2004://10.10.10.10:7777/Index.ut2> against <about:blank>]
    expected: FAIL

  [Parsing: <redis://foo:bar@somehost:6379/0?baz=bam&qux=baz> against <about:blank>]
    expected: FAIL

  [Parsing: <rsync://foo@host:911/sup> against <about:blank>]
    expected: FAIL

  [Parsing: <git://github.com/foo/bar.git> against <about:blank>]
    expected: FAIL

  [Parsing: <irc://myserver.com:6999/channel?passwd> against <about:blank>]
    expected: FAIL

  [Parsing: <dns://fw.example.org:9999/foo.bar.org?type=TXT> against <about:blank>]
    expected: FAIL

  [Parsing: <ldap://localhost:389/ou=People,o=JNDITutorial> against <about:blank>]
    expected: FAIL

  [Parsing: <git+https://github.com/foo/bar> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: </.//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: </..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <a/..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <path> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <../path> against <non-spec:/.//p>]
    expected: FAIL

  [Parsing: <non-special://%E2%80%A0/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://H%4fSt/path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:5:0:0:0\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:0:0:0:3\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2::3\]:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-slash.html> against <a://>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-slash-b.html> against <a://b>]
    expected: FAIL

  [Parsing: <non-spec://example.org/test?a#b\x00c> against <about:blank>]
    expected: FAIL

  [Parsing: <file://xn--/p> against <about:blank>]
    expected: FAIL

  [Parsing: <foo:// !"$%&'()*+,-.;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss:// !"$%&'()*+,-.;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://joe: !"$%&'()*+,-.:;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://joe: !"$%&'()*+,-.:;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/? !"$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/# !"#$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc://host/path>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc:/path>]
    expected: FAIL

  [Parsing: <abc:/rooted> against <abc://host/path>]
    expected: FAIL

  [Parsing: <h://.> against <about:blank>]
    expected: FAIL

  [Parsing: <file://loC𝐀𝐋𝐇𝐨𝐬𝐭/usr/bin> against <about:blank>]
    expected: FAIL

  [Parsing: </C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: </c:/foo/bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\\\.\\y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:..> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\\\.\\Y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:?q=v> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\x\\hello> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:\\c:\\foo\\bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/example.com/> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <c:/foo> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/example.com/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:a> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-b.html> against <a:b>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon.html> against <a:>]
    expected:
      if os == "win": FAIL

  [Parsing: <a:\t foo.com> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:...> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash.html> against <a:/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:#frag> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///./y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash-b.html> against <a:/b>]
    expected:
      if os == "win": FAIL

  [Parsing: </c:/foo/bar> against <file://host/path>]
    expected:
      if os == "win": FAIL


[url-constructor.any.html?exclude=(file|javascript|mailto)]
  [Parsing: <non-special://test:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <a:\t foo.com> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <non-special://f:999999/c> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <\\\\x\\hello> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <foo://> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////bar.com/> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo:////://///> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <c:/foo> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <ssh://example.com/foo/bar.git> against <http://example.org/>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e%2> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%41%7a> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%00%51> against <about:blank>]
    expected: FAIL

  [Parsing: <http://www/foo%2Ehtml> against <about:blank>]
    expected: FAIL

  [Parsing: <httpa://foo:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:70/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:443/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example example.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://Goo%20 goo%7C|.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://GOO 　goo.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://a.b.c.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.Xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://％４１.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <sc://faß.ExAmPlE/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://192.168.0.1 hello> against <http://other.com/>]
    expected: FAIL

  [Parsing: <https://x x:12> against <about:blank>]
    expected: FAIL

  [Parsing: <h://.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://[::1.2.3.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.2.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <notspecial://host/?'> against <about:blank>]
    expected: FAIL

  [Parsing: <i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: </i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: </i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <about:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <data:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ.test/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://%/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://te@s:t@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:12/> against <about:blank>]
    expected: FAIL

  [Parsing: <x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <wow:￿> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\x00b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a[b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\\b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\]b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a^b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\tst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\nst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\rst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%20st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%23st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Est/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%40st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%7Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://\x01\x02\x03\x04\x05\x06\x07\x08\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43|/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <\\\\\\.\\Y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\\\.\\y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <sc://ñ> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ?x> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ#x> against <about:blank>]
    expected: FAIL

  [Parsing: <#x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <?x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <sc://?> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://#> against <about:blank>]
    expected: FAIL

  [Parsing: <///> against <sc://x/>]
    expected: FAIL

  [Parsing: <////> against <sc://x/>]
    expected: FAIL

  [Parsing: <////x/> against <sc://x/>]
    expected: FAIL

  [Parsing: <tftp://foobar.com/someconfig;mode=netascii> against <about:blank>]
    expected: FAIL

  [Parsing: <telnet://user:pass@foobar.com:23/> against <about:blank>]
    expected: FAIL

  [Parsing: <ut2004://10.10.10.10:7777/Index.ut2> against <about:blank>]
    expected: FAIL

  [Parsing: <redis://foo:bar@somehost:6379/0?baz=bam&qux=baz> against <about:blank>]
    expected: FAIL

  [Parsing: <rsync://foo@host:911/sup> against <about:blank>]
    expected: FAIL

  [Parsing: <git://github.com/foo/bar.git> against <about:blank>]
    expected: FAIL

  [Parsing: <irc://myserver.com:6999/channel?passwd> against <about:blank>]
    expected: FAIL

  [Parsing: <dns://fw.example.org:9999/foo.bar.org?type=TXT> against <about:blank>]
    expected: FAIL

  [Parsing: <ldap://localhost:389/ou=People,o=JNDITutorial> against <about:blank>]
    expected: FAIL

  [Parsing: <git+https://github.com/foo/bar> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: </.//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: </..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <a/..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <path> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <../path> against <non-spec:/.//p>]
    expected: FAIL

  [Parsing: <non-special://%E2%80%A0/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://H%4fSt/path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:5:0:0:0\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:0:0:0:3\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2::3\]:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <test-a-colon.html> against <a:>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-b.html> against <a:b>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash.html> against <a:/>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash-slash.html> against <a://>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-b.html> against <a:/b>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash-slash-b.html> against <a://b>]
    expected: FAIL

  [Parsing: <non-spec://example.org/test?a#b\x00c> against <about:blank>]
    expected: FAIL

  [Parsing: <foo:// !"$%&'()*+,-.;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss:// !"$%&'()*+,-.;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://joe: !"$%&'()*+,-.:;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://joe: !"$%&'()*+,-.:;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/? !"$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/# !"#$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc://host/path>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc:/path>]
    expected: FAIL

  [Parsing: <abc:/rooted> against <abc://host/path>]
    expected: FAIL

  [Parsing: <non-special:￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/?￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/\x00y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/?#￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/?￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/?#￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <http://%5B::1\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::%31\]> against <http://other.com/>]
    expected: FAIL


[url-constructor.any.worker.html?include=javascript]
  [Parsing: <javascript:/../> against <about:blank>]
    expected: FAIL


[url-constructor.any.worker.html?include=mailto]
  [Parsing: <mailto:/../> against <about:blank>]
    expected: FAIL


[url-constructor.any.html?include=mailto]
  [Parsing: <mailto:/../> against <about:blank>]
    expected: FAIL


[url-constructor.any.worker.html?include=file]
  [Parsing: <file:/example.com/> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <  File:c|////foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </C|\\foo\\bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://localhost> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/test> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file:/example.com/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:...> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:..> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:a> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <file://%43%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43|> against <about:blank>]
    expected: FAIL

  [Parsing: <file://C%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <..> against <file:///C:/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file:///C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file://h/C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//d:> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <//d:/..> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <file:\\\\//> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\?fox> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\#guppy> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\localhost//> against <about:blank>]
    expected: FAIL

  [Parsing: <file://\\/localhost//cat> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost//a//../..//> against <about:blank>]
    expected: FAIL

  [Parsing: </////mouse> against <file:///elephant>]
    expected: FAIL

  [Parsing: <\\/localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <//localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <C|> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|> against <file://host/D:/dir1/dir2/file>]
    expected: FAIL

  [Parsing: <C|#> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|?> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\n/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\\> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|a> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: </c:/foo/bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: </c|/foo/bar> against <file:///c:/baz/qux>]
    expected: FAIL

  [Parsing: <file:\\c:\\foo\\bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: </c:/foo/bar> against <file://host/path>]
    expected:
      if os == "win": FAIL

  [Parsing: <C|/> against <file://host/>]
    expected: FAIL

  [Parsing: </C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <//C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file:/C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file:?q=v> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:#frag> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///./y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file://localhost//a//../..//foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <file:.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file://loC𝐀𝐋𝐇𝐨𝐬𝐭/usr/bin> against <about:blank>]
    expected: FAIL

  [Parsing: <file://xn--/p> against <about:blank>]
    expected: FAIL


[url-constructor.any.html?include=file]
  [Parsing: <file:/example.com/> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:c:\\foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <  File:c|////foo\\bar.html> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </C|\\foo\\bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//C|/foo/bar> against <file:///tmp/mock/path>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://localhost> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file://localhost/test> against <file:///tmp/mock/path>]
    expected: FAIL

  [Parsing: <file:/example.com/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:...> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:..> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:a> against <http://www.example.com/test>]
    expected:
      if os == "win": FAIL

  [Parsing: <file://%43%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43|> against <about:blank>]
    expected: FAIL

  [Parsing: <file://C%7C> against <about:blank>]
    expected: FAIL

  [Parsing: <file://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <..> against <file:///C:/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file:///C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: </> against <file://h/C:/a/b>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <//d:> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <//d:/..> against <file:///C:/a/b>]
    expected: FAIL

  [Parsing: <file:\\\\//> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\?fox> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\\\\\#guppy> against <about:blank>]
    expected: FAIL

  [Parsing: <file:\\\\localhost//> against <about:blank>]
    expected: FAIL

  [Parsing: <file://\\/localhost//cat> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost//a//../..//> against <about:blank>]
    expected: FAIL

  [Parsing: </////mouse> against <file:///elephant>]
    expected: FAIL

  [Parsing: <\\/localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <//localhost//pig> against <file://lion/>]
    expected: FAIL

  [Parsing: <C|> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|> against <file://host/D:/dir1/dir2/file>]
    expected: FAIL

  [Parsing: <C|#> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|?> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\n/> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|\\> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: <C|a> against <file://host/dir/file>]
    expected: FAIL

  [Parsing: </c:/foo/bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: </c|/foo/bar> against <file:///c:/baz/qux>]
    expected: FAIL

  [Parsing: <file:\\c:\\foo\\bar> against <file:///c:/baz/qux>]
    expected:
      if os == "win": FAIL

  [Parsing: </c:/foo/bar> against <file://host/path>]
    expected:
      if os == "win": FAIL

  [Parsing: <C|/> against <file://host/>]
    expected: FAIL

  [Parsing: </C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/C:/> against <file://host/>]
    expected:
      if os == "win": FAIL

  [Parsing: <//C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C:/> against <file://host/>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file:/C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file://C|/> against <about:blank>]
    expected:
      if os == "win": PASS
      FAIL

  [Parsing: <file:?q=v> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:#frag> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///y:/> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:///./y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file://localhost//a//../..//foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file://localhost////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////foo> against <about:blank>]
    expected: FAIL

  [Parsing: <file:////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <////one/two> against <file:///>]
    expected: FAIL

  [Parsing: <file:.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file:/.//p> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <file://loC𝐀𝐋𝐇𝐨𝐬𝐭/usr/bin> against <about:blank>]
    expected: FAIL

  [Parsing: <file://xn--/p> against <about:blank>]
    expected: FAIL


[url-constructor.any.worker.html?exclude=(file|javascript|mailto)]
  [Parsing: <non-special://test:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://:@test/x> against <about:blank>]
    expected: FAIL

  [Parsing: <a:\t foo.com> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <non-special://f:999999/c> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <\\\\x\\hello> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <foo://> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo://///////bar.com/> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <foo:////://///> against <http://example.org/foo/bar>]
    expected: FAIL

  [Parsing: <c:/foo> against <http://example.org/foo/bar>]
    expected:
      if os == "win": FAIL

  [Parsing: <ssh://example.com/foo/bar.git> against <http://example.org/>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e%2> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo/%2e./%2e%2e/.%2e/%2e.bar> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%41%7a> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/foo%00%51> against <about:blank>]
    expected: FAIL

  [Parsing: <http://www/foo%2Ehtml> against <about:blank>]
    expected: FAIL

  [Parsing: <httpa://foo:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:70/> against <about:blank>]
    expected: FAIL

  [Parsing: <gopher://foo:443/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example example.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://Goo%20 goo%7C|.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://GOO 　goo.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://a.b.c.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a.b.c.Xn--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.XN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://10.0.0.xN--pokxncvks> against <about:blank>]
    expected: FAIL

  [Parsing: <http://％４１.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://%ef%bc%85%ef%bc%94%ef%bc%91.com> against <http://other.com/>]
    expected: FAIL

  [Parsing: <sc://faß.ExAmPlE/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://192.168.0.1 hello> against <http://other.com/>]
    expected: FAIL

  [Parsing: <https://x x:12> against <about:blank>]
    expected: FAIL

  [Parsing: <h://.> against <about:blank>]
    expected: FAIL

  [Parsing: <http://[::1.2.3.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.2.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::1.\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <notspecial://host/?'> against <about:blank>]
    expected: FAIL

  [Parsing: <i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <../i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: </i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: </i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <?i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc://ho/pa>]
    expected: FAIL

  [Parsing: <#i> against <sc:///pa/pa>]
    expected: FAIL

  [Parsing: <about:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <data:/../> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ.test/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://%/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://te@s:t@/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://:12/> against <about:blank>]
    expected: FAIL

  [Parsing: <x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <wow:￿> against <about:blank>]
    expected: FAIL

  [Parsing: <http://example.com/U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿?U+d800𐟾U+dfff﷐﷏﷯ﷰ￾￿> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\x00b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a[b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\\b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a\]b/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a^b> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\tst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\nst/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://ho\rst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a<b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a>b> against <about:blank>]
    expected: FAIL

  [Parsing: <http://a|b/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%20st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%23st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%3Est/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%40st/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://ho%7Cst/> against <about:blank>]
    expected: FAIL

  [Parsing: <http://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://\x01\x02\x03\x04\x05\x06\x07\x08\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <https://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43|/> against <about:blank>]
    expected: FAIL

  [Parsing: <asdf://%43%7C/> against <about:blank>]
    expected: FAIL

  [Parsing: <\\\\\\.\\Y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <\\\\\\.\\y:> against <about:blank>]
    expected:
      if os == "win": FAIL

  [Parsing: <sc://ñ> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ?x> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://ñ#x> against <about:blank>]
    expected: FAIL

  [Parsing: <#x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <?x> against <sc://ñ>]
    expected: FAIL

  [Parsing: <sc://?> against <about:blank>]
    expected: FAIL

  [Parsing: <sc://#> against <about:blank>]
    expected: FAIL

  [Parsing: <///> against <sc://x/>]
    expected: FAIL

  [Parsing: <////> against <sc://x/>]
    expected: FAIL

  [Parsing: <////x/> against <sc://x/>]
    expected: FAIL

  [Parsing: <tftp://foobar.com/someconfig;mode=netascii> against <about:blank>]
    expected: FAIL

  [Parsing: <telnet://user:pass@foobar.com:23/> against <about:blank>]
    expected: FAIL

  [Parsing: <ut2004://10.10.10.10:7777/Index.ut2> against <about:blank>]
    expected: FAIL

  [Parsing: <redis://foo:bar@somehost:6379/0?baz=bam&qux=baz> against <about:blank>]
    expected: FAIL

  [Parsing: <rsync://foo@host:911/sup> against <about:blank>]
    expected: FAIL

  [Parsing: <git://github.com/foo/bar.git> against <about:blank>]
    expected: FAIL

  [Parsing: <irc://myserver.com:6999/channel?passwd> against <about:blank>]
    expected: FAIL

  [Parsing: <dns://fw.example.org:9999/foo.bar.org?type=TXT> against <about:blank>]
    expected: FAIL

  [Parsing: <ldap://localhost:389/ou=People,o=JNDITutorial> against <about:blank>]
    expected: FAIL

  [Parsing: <git+https://github.com/foo/bar> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/.//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-spec:/a/..//path> against <about:blank>]
    expected: FAIL

  [Parsing: </.//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: </..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <a/..//path> against <non-spec:/p>]
    expected: FAIL

  [Parsing: <> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <path> against <non-spec:/..//p>]
    expected: FAIL

  [Parsing: <../path> against <non-spec:/.//p>]
    expected: FAIL

  [Parsing: <non-special://%E2%80%A0/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://H%4fSt/path> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:5:0:0:0\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2:0:0:0:0:0:3\]/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[1:2::3\]:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special://[:80/> against <about:blank>]
    expected: FAIL

  [Parsing: <test-a-colon.html> against <a:>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-b.html> against <a:b>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash.html> against <a:/>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash-slash.html> against <a://>]
    expected: FAIL

  [Parsing: <test-a-colon-slash-b.html> against <a:/b>]
    expected:
      if os == "win": FAIL

  [Parsing: <test-a-colon-slash-slash-b.html> against <a://b>]
    expected: FAIL

  [Parsing: <non-spec://example.org/test?a#b\x00c> against <about:blank>]
    expected: FAIL

  [Parsing: <foo:// !"$%&'()*+,-.;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss:// !"$%&'()*+,-.;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://joe: !"$%&'()*+,-.:;<=>@[\\\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://joe: !"$%&'()*+,-.:;<=>@[\]^_`{|}~@host/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://!"$%&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://!"$&'()*+,-.;=_`{}~/> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <wss://host/ !"$%&'()*+,-./:;<=>@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/? !"$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <foo://host/dir/# !"#$%&'()*+,-./:;<=>?@[\\\]^_`{|}~> against <about:blank>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc://host/path>]
    expected: FAIL

  [Parsing: <abc:rootless> against <abc:/path>]
    expected: FAIL

  [Parsing: <abc:/rooted> against <abc://host/path>]
    expected: FAIL

  [Parsing: <non-special:￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/?￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/\x00y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/?#￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <https://x/￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/?￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <non-special:x/?#￿y> against <about:blank>]
    expected: FAIL

  [Parsing: <http://%5B::1\]> against <http://other.com/>]
    expected: FAIL

  [Parsing: <http://[::%31\]> against <http://other.com/>]
    expected: FAIL


[url-constructor.any.html?include=javascript]
  [Parsing: <javascript:/../> against <about:blank>]
    expected: FAIL
