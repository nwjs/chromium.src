[idlharness.https.any.html]
  [idl_test setup]
    expected: FAIL

  [NavigatorML must be primary interface of navigator]
    expected: FAIL

  [Stringification of navigator]
    expected: FAIL

  [MLContext interface: operation createCommandEncoder()]
    expected: FAIL

  [MLContext interface: context must inherit property "createCommandEncoder()" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: operation constant(MLOperandDescriptor, MLBufferView)]
    expected: FAIL

  [MLGraphBuilder interface: operation constant(double, optional MLOperandType)]
    expected: FAIL

  [MLGraphBuilder interface: operation batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation concat(sequence<MLOperand>, long)]
    expected: FAIL

  [MLGraphBuilder interface: operation convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation pow(MLOperand, MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation abs(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation ceil(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation cos(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation exp(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation floor(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation log(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation neg(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation sin(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation tan(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation elu(MLOperand, optional MLEluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation elu(optional MLEluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation gru(MLOperand, MLOperand, MLOperand, long, long, optional MLGruOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation gruCell(MLOperand, MLOperand, MLOperand, MLOperand, long, optional MLGruCellOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation hardSigmoid(MLOperand, optional MLHardSigmoidOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation hardSigmoid(optional MLHardSigmoidOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation leakyRelu(MLOperand, optional MLLeakyReluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation leakyRelu(optional MLLeakyReluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation matmul(MLOperand, MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation linear(MLOperand, optional MLLinearOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation linear(optional MLLinearOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation pad(MLOperand, MLOperand, optional MLPadOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation l2Pool2d(MLOperand, optional MLPool2dOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceL1(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceL2(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceLogSum(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceLogSumExp(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceMax(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceMean(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceMin(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceProduct(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceSum(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceSumSquare(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation slice(MLOperand, sequence<long>, sequence<long>, optional MLSliceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation softplus(MLOperand, optional MLSoftplusOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation softplus(optional MLSoftplusOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation softsign(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation softsign()]
    expected: FAIL

  [MLGraphBuilder interface: operation split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation squeeze(MLOperand, optional MLSqueezeOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation tanh(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation tanh()]
    expected: FAIL

  [MLGraphBuilder interface: operation transpose(MLOperand, optional MLTransposeOptions)]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "concat(sequence<MLOperand>, long)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling concat(sequence<MLOperand>, long) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "pow(MLOperand, MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling pow(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "abs(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling abs(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "ceil(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling ceil(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "cos(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling cos(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "exp(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling exp(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "floor(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling floor(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "log(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling log(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "neg(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling neg(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "sin(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling sin(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "tan(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling tan(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "elu(MLOperand, optional MLEluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling elu(MLOperand, optional MLEluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "elu(optional MLEluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling elu(optional MLEluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gru(MLOperand, MLOperand, MLOperand, long, long, optional MLGruOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling gru(MLOperand, MLOperand, MLOperand, long, long, optional MLGruOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gruCell(MLOperand, MLOperand, MLOperand, MLOperand, long, optional MLGruCellOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling gruCell(MLOperand, MLOperand, MLOperand, MLOperand, long, optional MLGruCellOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "hardSigmoid(MLOperand, optional MLHardSigmoidOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling hardSigmoid(MLOperand, optional MLHardSigmoidOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "hardSigmoid(optional MLHardSigmoidOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling hardSigmoid(optional MLHardSigmoidOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "leakyRelu(MLOperand, optional MLLeakyReluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling leakyRelu(MLOperand, optional MLLeakyReluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "leakyRelu(optional MLLeakyReluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling leakyRelu(optional MLLeakyReluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "matmul(MLOperand, MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling matmul(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "linear(MLOperand, optional MLLinearOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling linear(MLOperand, optional MLLinearOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "linear(optional MLLinearOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling linear(optional MLLinearOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "pad(MLOperand, MLOperand, optional MLPadOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling pad(MLOperand, MLOperand, optional MLPadOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "l2Pool2d(MLOperand, optional MLPool2dOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling l2Pool2d(MLOperand, optional MLPool2dOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceL1(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceL1(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceL2(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceL2(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceLogSum(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceLogSum(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceLogSumExp(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceLogSumExp(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceMax(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceMax(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceMean(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceMean(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceMin(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceMin(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceProduct(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceProduct(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceSum(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceSum(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceSumSquare(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceSumSquare(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "slice(MLOperand, sequence<long>, sequence<long>, optional MLSliceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling slice(MLOperand, sequence<long>, sequence<long>, optional MLSliceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softplus(MLOperand, optional MLSoftplusOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling softplus(MLOperand, optional MLSoftplusOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softplus(optional MLSoftplusOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling softplus(optional MLSoftplusOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softsign(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling softsign(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softsign()" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "squeeze(MLOperand, optional MLSqueezeOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling squeeze(MLOperand, optional MLSqueezeOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "tanh(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling tanh(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "tanh()" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "transpose(MLOperand, optional MLTransposeOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling transpose(MLOperand, optional MLTransposeOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraph must be primary interface of graph]
    expected: FAIL

  [Stringification of graph]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface object]
    expected: FAIL

  [MLCommandEncoder interface object length]
    expected: FAIL

  [MLCommandEncoder interface object name]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface prototype object]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface prototype object's "constructor" property]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface prototype object's @@unscopables property]
    expected: FAIL

  [MLCommandEncoder interface: operation initializeGraph(MLGraph)]
    expected: FAIL

  [MLCommandEncoder interface: operation dispatch(MLGraph, MLNamedGPUResources, MLNamedGPUResources)]
    expected: FAIL

  [MLCommandEncoder interface: operation finish(optional GPUCommandBufferDescriptor)]
    expected: FAIL

  [MLContext interface: calling compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews) on context with too few arguments must throw TypeError]
    expected: FAIL

  [MLContext interface: context must inherit property "compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling build(MLNamedOperands) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: operation build(MLNamedOperands)]
    expected: FAIL

  [MLContext interface: operation compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "build(MLNamedOperands)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions)" with the proper type]
    expected: FAIL

  [MLActivation interface: existence and properties of interface prototype object's "constructor" property]
    expected: FAIL

  [MLGraphBuilder interface: operation lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions)]
    expected: FAIL

  [MLActivation interface object length]
    expected: FAIL

  [MLGraphBuilder interface: operation gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions)]
    expected: FAIL

  [MLActivation interface: existence and properties of interface object]
    expected: FAIL

  [MLGraphBuilder interface: operation gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions)]
    expected: FAIL

  [MLGraphBuilder interface: calling gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: operation lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions)]
    expected: FAIL

  [MLGraphBuilder interface: calling gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: operation softmax(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: operation softmax()]
    expected: FAIL

  [MLGraphBuilder interface: calling lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLActivation interface object name]
    expected: FAIL

  [MLActivation interface: existence and properties of interface prototype object's @@unscopables property]
    expected: FAIL

  [MLActivation interface: existence and properties of interface prototype object]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions)" with the proper type]
    expected: FAIL


[idlharness.https.any.worker.html]
  [idl_test setup]
    expected: FAIL

  [NavigatorML must be primary interface of navigator]
    expected: FAIL

  [Stringification of navigator]
    expected: FAIL

  [ML interface: existence and properties of interface object]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface object length]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface object name]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: existence and properties of interface prototype object]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: existence and properties of interface prototype object's "constructor" property]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: existence and properties of interface prototype object's @@unscopables property]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: operation createContext(optional MLContextOptions)]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: operation createContext(GPUDevice)]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML must be primary interface of navigator.ml]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [Stringification of navigator.ml]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: navigator.ml must inherit property "createContext(optional MLContextOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: calling createContext(optional MLContextOptions) on navigator.ml with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: navigator.ml must inherit property "createContext(GPUDevice)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: calling createContext(GPUDevice) on navigator.ml with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: existence and properties of interface object]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface object length]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface object name]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: existence and properties of interface prototype object]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: existence and properties of interface prototype object's "constructor" property]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: existence and properties of interface prototype object's @@unscopables property]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: operation compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)]
    expected: FAIL

  [MLContext interface: operation createCommandEncoder()]
    expected: FAIL

  [MLContext must be primary interface of context]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [Stringification of context]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: context must inherit property "compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)" with the proper type]
    expected: FAIL

  [MLContext interface: calling compute(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews) on context with too few arguments must throw TypeError]
    expected: FAIL

  [MLContext interface: context must inherit property "createCommandEncoder()" with the proper type]
    expected: FAIL

  [MLOperand interface: existence and properties of interface object]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand interface object length]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand interface object name]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand interface: existence and properties of interface prototype object]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand interface: existence and properties of interface prototype object's "constructor" property]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand interface: existence and properties of interface prototype object's @@unscopables property]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand must be primary interface of input]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [Stringification of input]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand must be primary interface of filter]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [Stringification of filter]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperand must be primary interface of output]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [Stringification of output]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLOperator interface: existence and properties of interface object]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [MLOperator interface object length]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [MLOperator interface object name]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [MLOperator interface: existence and properties of interface prototype object]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [MLOperator interface: existence and properties of interface prototype object's "constructor" property]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [MLOperator interface: existence and properties of interface prototype object's @@unscopables property]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [MLOperator must be primary interface of relu]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [Stringification of relu]
    expected:
      if flag_specific == "disable-site-isolation-trials": PASS
      FAIL

  [MLGraphBuilder interface: existence and properties of interface object]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface object length]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface object name]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: existence and properties of interface prototype object]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: existence and properties of interface prototype object's "constructor" property]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: existence and properties of interface prototype object's @@unscopables property]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation input(DOMString, MLOperandDescriptor)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation constant(MLOperandDescriptor, MLBufferView)]
    expected: FAIL

  [MLGraphBuilder interface: operation constant(double, optional MLOperandType)]
    expected: FAIL

  [MLGraphBuilder interface: operation build(MLNamedOperands)]
    expected: FAIL

  [MLGraphBuilder interface: operation batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation clamp(MLOperand, optional MLClampOptions)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation clamp(optional MLClampOptions)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation concat(sequence<MLOperand>, long)]
    expected: FAIL

  [MLGraphBuilder interface: operation conv2d(MLOperand, MLOperand, optional MLConv2dOptions)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation add(MLOperand, MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation sub(MLOperand, MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation mul(MLOperand, MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation div(MLOperand, MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation max(MLOperand, MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation min(MLOperand, MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation pow(MLOperand, MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation abs(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation ceil(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation cos(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation exp(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation floor(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation log(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation neg(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation sin(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation tan(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation elu(MLOperand, optional MLEluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation elu(optional MLEluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation gemm(MLOperand, MLOperand, optional MLGemmOptions)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation gru(MLOperand, MLOperand, MLOperand, long, long, optional MLGruOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation gruCell(MLOperand, MLOperand, MLOperand, MLOperand, long, optional MLGruCellOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation hardSigmoid(MLOperand, optional MLHardSigmoidOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation hardSigmoid(optional MLHardSigmoidOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation hardSwish(MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation hardSwish()]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation leakyRelu(MLOperand, optional MLLeakyReluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation leakyRelu(optional MLLeakyReluOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation matmul(MLOperand, MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation linear(MLOperand, optional MLLinearOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation linear(optional MLLinearOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation pad(MLOperand, MLOperand, optional MLPadOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation averagePool2d(MLOperand, optional MLPool2dOptions)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation l2Pool2d(MLOperand, optional MLPool2dOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation maxPool2d(MLOperand, optional MLPool2dOptions)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation reduceL1(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceL2(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceLogSum(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceLogSumExp(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceMax(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceMean(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceMin(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceProduct(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceSum(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation reduceSumSquare(MLOperand, optional MLReduceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation relu(MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation relu()]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation resample2d(MLOperand, optional MLResample2dOptions)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation sigmoid(MLOperand)]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation sigmoid()]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: operation slice(MLOperand, sequence<long>, sequence<long>, optional MLSliceOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation softmax(MLOperand)]
    expected:
      if flag_specific == "disable-site-isolation-trials": [FAIL, PASS]
      FAIL

  [MLGraphBuilder interface: operation softplus(MLOperand, optional MLSoftplusOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation softplus(optional MLSoftplusOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation softsign(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation softsign()]
    expected: FAIL

  [MLGraphBuilder interface: operation split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation squeeze(MLOperand, optional MLSqueezeOptions)]
    expected: FAIL

  [MLGraphBuilder interface: operation tanh(MLOperand)]
    expected: FAIL

  [MLGraphBuilder interface: operation tanh()]
    expected: FAIL

  [MLGraphBuilder interface: operation transpose(MLOperand, optional MLTransposeOptions)]
    expected: FAIL

  [MLGraphBuilder must be primary interface of builder]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [Stringification of builder]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: builder must inherit property "input(DOMString, MLOperandDescriptor)" with the proper type]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: calling input(DOMString, MLOperandDescriptor) on builder with too few arguments must throw TypeError]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: builder must inherit property "constant(MLOperandDescriptor, MLBufferView)" with the proper type]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: calling constant(MLOperandDescriptor, MLBufferView) on builder with too few arguments must throw TypeError]
    expected:
      if (flag_specific == "") and (processor == "x86_64") and (os == "linux") and (version == "trusty"): FAIL
      if (flag_specific == "") and (processor == "x86"): FAIL
      if flag_specific == "highdpi": FAIL

  [MLGraphBuilder interface: builder must inherit property "constant(double, optional MLOperandType)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling constant(double, optional MLOperandType) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "build(MLNamedOperands)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling build(MLNamedOperands) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling batchNormalization(MLOperand, MLOperand, MLOperand, optional MLBatchNormalizationOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "clamp(MLOperand, optional MLClampOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling clamp(MLOperand, optional MLClampOptions) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "clamp(optional MLClampOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling clamp(optional MLClampOptions) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "concat(sequence<MLOperand>, long)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling concat(sequence<MLOperand>, long) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "conv2d(MLOperand, MLOperand, optional MLConv2dOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling conv2d(MLOperand, MLOperand, optional MLConv2dOptions) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling convTranspose2d(MLOperand, MLOperand, optional MLConvTranspose2dOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "add(MLOperand, MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling add(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "sub(MLOperand, MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling sub(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "mul(MLOperand, MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling mul(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "div(MLOperand, MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling div(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "max(MLOperand, MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling max(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "min(MLOperand, MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling min(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "pow(MLOperand, MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling pow(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "abs(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling abs(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "ceil(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling ceil(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "cos(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling cos(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "exp(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling exp(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "floor(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling floor(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "log(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling log(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "neg(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling neg(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "sin(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling sin(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "tan(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling tan(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "elu(MLOperand, optional MLEluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling elu(MLOperand, optional MLEluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "elu(optional MLEluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling elu(optional MLEluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gemm(MLOperand, MLOperand, optional MLGemmOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling gemm(MLOperand, MLOperand, optional MLGemmOptions) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "gru(MLOperand, MLOperand, MLOperand, long, long, optional MLGruOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling gru(MLOperand, MLOperand, MLOperand, long, long, optional MLGruOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gruCell(MLOperand, MLOperand, MLOperand, MLOperand, long, optional MLGruCellOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling gruCell(MLOperand, MLOperand, MLOperand, MLOperand, long, optional MLGruCellOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "hardSigmoid(MLOperand, optional MLHardSigmoidOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling hardSigmoid(MLOperand, optional MLHardSigmoidOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "hardSigmoid(optional MLHardSigmoidOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling hardSigmoid(optional MLHardSigmoidOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "hardSwish(MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling hardSwish(MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "hardSwish()" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling instanceNormalization(MLOperand, optional MLInstanceNormalizationOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "leakyRelu(MLOperand, optional MLLeakyReluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling leakyRelu(MLOperand, optional MLLeakyReluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "leakyRelu(optional MLLeakyReluOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling leakyRelu(optional MLLeakyReluOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "matmul(MLOperand, MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling matmul(MLOperand, MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "linear(MLOperand, optional MLLinearOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling linear(MLOperand, optional MLLinearOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "linear(optional MLLinearOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling linear(optional MLLinearOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "pad(MLOperand, MLOperand, optional MLPadOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling pad(MLOperand, MLOperand, optional MLPadOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "averagePool2d(MLOperand, optional MLPool2dOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling averagePool2d(MLOperand, optional MLPool2dOptions) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "l2Pool2d(MLOperand, optional MLPool2dOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling l2Pool2d(MLOperand, optional MLPool2dOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "maxPool2d(MLOperand, optional MLPool2dOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling maxPool2d(MLOperand, optional MLPool2dOptions) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceL1(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceL1(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceL2(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceL2(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceLogSum(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceLogSum(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceLogSumExp(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceLogSumExp(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceMax(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceMax(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceMean(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceMean(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceMin(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceMin(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceProduct(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceProduct(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceSum(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceSum(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "reduceSumSquare(MLOperand, optional MLReduceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling reduceSumSquare(MLOperand, optional MLReduceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "relu(MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling relu(MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "relu()" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "resample2d(MLOperand, optional MLResample2dOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling resample2d(MLOperand, optional MLResample2dOptions) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "sigmoid(MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling sigmoid(MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "sigmoid()" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "slice(MLOperand, sequence<long>, sequence<long>, optional MLSliceOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling slice(MLOperand, sequence<long>, sequence<long>, optional MLSliceOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softmax(MLOperand)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling softmax(MLOperand) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "softplus(MLOperand, optional MLSoftplusOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling softplus(MLOperand, optional MLSoftplusOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softplus(optional MLSoftplusOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling softplus(optional MLSoftplusOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softsign(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling softsign(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "softsign()" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling split(MLOperand, (unsigned long or sequence<unsigned long>), optional MLSplitOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "squeeze(MLOperand, optional MLSqueezeOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling squeeze(MLOperand, optional MLSqueezeOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "tanh(MLOperand)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling tanh(MLOperand) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "tanh()" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "transpose(MLOperand, optional MLTransposeOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: calling transpose(MLOperand, optional MLTransposeOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraph interface: existence and properties of interface object]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraph interface object length]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraph interface object name]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraph interface: existence and properties of interface prototype object]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraph interface: existence and properties of interface prototype object's "constructor" property]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraph interface: existence and properties of interface prototype object's @@unscopables property]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraph must be primary interface of graph]
    expected: FAIL

  [Stringification of graph]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface object]
    expected: FAIL

  [MLCommandEncoder interface object length]
    expected: FAIL

  [MLCommandEncoder interface object name]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface prototype object]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface prototype object's "constructor" property]
    expected: FAIL

  [MLCommandEncoder interface: existence and properties of interface prototype object's @@unscopables property]
    expected: FAIL

  [MLCommandEncoder interface: operation initializeGraph(MLGraph)]
    expected: FAIL

  [MLCommandEncoder interface: operation dispatch(MLGraph, MLNamedGPUResources, MLNamedGPUResources)]
    expected: FAIL

  [MLCommandEncoder interface: operation finish(optional GPUCommandBufferDescriptor)]
    expected: FAIL

  [WorkerNavigator interface: attribute ml]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [WorkerNavigator interface: navigator must inherit property "ml" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: operation createContextSync(GPUDevice)]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: operation createContextSync(optional MLContextOptions)]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: operation reshape(MLOperand, sequence<unsigned long?>)]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: calling computeSync(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews) on context with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: calling buildSync(MLNamedOperands) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: operation buildSync(MLNamedOperands)]
    expected: FAIL

  [ML interface: calling createContextSync(optional MLContextOptions) on navigator.ml with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: builder must inherit property "reshape(MLOperand, sequence<unsigned long?>)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLGraphBuilder interface: calling reshape(MLOperand, sequence<unsigned long?>) on builder with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: context must inherit property "computeSync(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "buildSync(MLNamedOperands)" with the proper type]
    expected: FAIL

  [ML interface: navigator.ml must inherit property "createContextSync(GPUDevice)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [ML interface: navigator.ml must inherit property "createContextSync(optional MLContextOptions)" with the proper type]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [MLContext interface: operation computeSync(MLGraph, MLNamedArrayBufferViews, MLNamedArrayBufferViews)]
    expected: FAIL

  [ML interface: calling createContextSync(GPUDevice) on navigator.ml with too few arguments must throw TypeError]
    expected:
      if (processor == "x86_64") and (os == "linux") and (version == "Ubuntu 18.04"): PASS
      if (processor == "x86_64") and (os == "win"): PASS
      FAIL

  [NavigatorML interface: navigator must not have property "ml"]
    expected: FAIL

  [MLGraphBuilder interface: calling lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions)" with the proper type]
    expected: FAIL

  [MLActivation interface: existence and properties of interface prototype object's "constructor" property]
    expected: FAIL

  [MLGraphBuilder interface: operation lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions)]
    expected: FAIL

  [MLActivation interface object length]
    expected: FAIL

  [MLGraphBuilder interface: operation gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions)]
    expected: FAIL

  [MLActivation interface: existence and properties of interface object]
    expected: FAIL

  [MLGraphBuilder interface: operation gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions)]
    expected: FAIL

  [MLGraphBuilder interface: calling gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: operation lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions)]
    expected: FAIL

  [MLGraphBuilder interface: calling gru(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLGruOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "gruCell(MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLGruCellOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: operation softmax()]
    expected: FAIL

  [MLGraphBuilder interface: calling lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions) on builder with too few arguments must throw TypeError]
    expected: FAIL

  [MLActivation interface object name]
    expected: FAIL

  [MLActivation interface: existence and properties of interface prototype object's @@unscopables property]
    expected: FAIL

  [MLActivation interface: existence and properties of interface prototype object]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "lstm(MLOperand, MLOperand, MLOperand, unsigned long, unsigned long, optional MLLstmOptions)" with the proper type]
    expected: FAIL

  [MLGraphBuilder interface: builder must inherit property "lstmCell(MLOperand, MLOperand, MLOperand, MLOperand, MLOperand, unsigned long, optional MLLstmCellOptions)" with the proper type]
    expected: FAIL
