// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module ash.mojom;

import "mojo/public/mojom/base/time.mojom";

// MetaKey denotes all the possible options deducable from the users external or
// internal keyboard. Used to show the correct key to the user in the settings
// UI.
enum MetaKey {
  kSearch,
  kLauncher,
  kExternalMeta,
  kCommand
};

// ModifierKey contains the set of physical keys supported for modifier
// remapping.
enum ModifierKey {
  kMeta = 0,
  kControl = 1,
  kAlt = 2,
  // kVoid is used as a key that has no action. This key does not physically
  // exist on a keyboard, but a user may remap any modifier to function like a
  // void key.
  kVoid = 3,
  kCapsLock = 4,
  kEscape = 5,
  kBackspace = 6,
  kAssistant = 7,
};

// Contains all information needed to display, apply, and update keyboard
// settings.
struct Keyboard {
  string name;
  // Used to display different names and settings in the settings app.
  bool is_external;
  // Unique identifier for the keyboard which is assigned by ozone when it is
  // connected and is reassigned when disconnected and reconnected to the
  // system. These ids can be rarely reused for multiple devices if the original
  // device holding the id had been disconnected.
  uint32 id;
  // Key used to lookup device settings in prefs in the format
  // "vendor_id:product_id" where the ids are 16-bit hex in lowercase.
  // Example: 5022:18d1.
  string device_key;
  // Meta key type (launcher, search, etc) for this keyboard.
  MetaKey meta_key;
  // List of modifier keys (caps lock, assistant, etc) present on this device.
  array<ModifierKey> modifier_keys;
  KeyboardSettings settings;
};

// Contains all existing keyboard settings available for use.
struct KeyboardSettings {
  map<ModifierKey, ModifierKey> modifier_remappings;
  bool top_row_are_fkeys;
  bool suppress_meta_fkey_rewrites;
  bool auto_repeat_enabled;
  mojo_base.mojom.TimeDelta auto_repeat_delay;
  mojo_base.mojom.TimeDelta auto_repeat_interval;
};
