/* Copyright 2022 The Chromium Authors
 * Use of this source code is governed by a BSD_style license that can be
 * found in the LICENSE file. */

/*
 * cros.sys Color Tokens
 *
 * High level color semantics for ChromeOS.
 */
{
  token_namespace: 'cros.sys',
  options: {
    ColorMappings: {
      set_name: 'CrosSys',
    },
    proto: {
      field_name: 'palette_colors',
      field_id: 1,
    },
  },
  colors: {
    /* Primary */
    primary: {
      light: '$cros.ref.primary40',
      dark: '$cros.ref.primary80',
      generate_per_mode: true,
    },
    'inverse-primary': {
      light: '$cros.ref.primary80',
      dark: '$cros.ref.primary40',
    },
    'on-primary': {
      light: '$cros.ref.primary100',
      dark:  '$cros.ref.primary20',
    },
    'primary-container': {
      light: '$cros.ref.primary90',
      dark:  'blend(rgba($cros.ref.primary30.rgb, 0.08), $cros.ref.secondary30)',
    },
    'on-primary-container': {
      light: '$cros.ref.primary10',
      dark:  '$cros.ref.primary90',
    },

    /* Secondary */
    secondary: {
      light: '$cros.ref.secondary40',
      dark:  '$cros.ref.secondary80',
      generate_per_mode: true,
    },
    'on-secondary': {
      light: '$cros.ref.secondary100',
      dark:  '$cros.ref.secondary20',
    },
    'secondary-container': {
      light: '$cros.ref.secondary90',
      dark:  '$cros.ref.secondary30',
    },
    'on-secondary-container': {
      light: '$cros.ref.secondary10',
      dark:  '$cros.ref.secondary90',
    },

    /* Tertiary */
    tertiary: {
      light: '$cros.ref.tertiary40',
      dark:  '$cros.ref.tertiary80',
    },
    'on-tertiary': {
      light: '$cros.ref.tertiary100',
      dark:  '$cros.ref.tertiary20',
    },
    'tertiary-container': {
      light: '$cros.ref.tertiary90',
      dark:  '$cros.ref.tertiary30',
    },
    'on-tertiary-container': {
      light: '$cros.ref.tertiary10',
      dark:  '$cros.ref.tertiary90',
    },

    /* Error */
    error: {
      light: '$cros.ref.error40',
      dark:  '$cros.ref.error80',
    },
    'on-error': {
      light: '$cros.ref.error100',
      dark:  '$cros.ref.error20',
    },
    'error-container': {
      light: '$cros.ref.error90',
      dark:  '$cros.ref.error30',
    },
    'on-error-container': {
      light: '$cros.ref.error10',
      dark:  '$cros.ref.error90',
    },

    /* Neutral */
    'surface-variant': {
      light: '$cros.ref.neutralvariant90',
      dark:  '$cros.ref.neutralvariant30',
    },
    'on-surface-variant': {
      light: '$cros.ref.neutralvariant30',
      dark:  '$cros.ref.neutralvariant80',
    },
    outline: {
      light: '$cros.ref.neutralvariant50',
      dark:  '$cros.ref.neutralvariant60',
    },
    separator: {
      light: 'rgba($cros.ref.neutral10.rgb, 0.14)',
      dark:  'rgba($cros.ref.neutral90.rgb, 0.14)',
    },

    /* Bases */
    header: {
      light: '$cros.ref.secondary90',
      dark:  '$cros.ref.secondary20',
    },
    'app-base-shaded': {
      light: '$cros.ref.neutralvariant95',
      dark:  'blend(rgba($black.rgb, 0.4), $cros.ref.neutral10)'
    },
    'app-base': {
      light: '$cros.ref.neutral99',
      dark:  '$cros.ref.neutral10',
    },
    'app-base-elevated': {
      light: '$cros.ref.neutralvariant100',
      /* In dark mode we layer primary80 @ 11% ontop of neutral80 @ 2% ontop of neutral 10. */
      dark: 'blend(rgba($cros.ref.primary80.rgb, .11), blend(rgba($cros.ref.neutral80.rgb, .02), $cros.ref.neutral10))',
      generate_per_mode: true,
    },

    'system-base': {
      light: '$cros.ref.neutralvariant90',
      dark: '$cros.ref.neutralvariant0',
    },
    'system-base-elevated': {
      light: 'rgba($cros.sys.surface3.rgb, 0.9)',
      dark: 'rgba($cros.sys.surface3.rgb, 0.9)',
    },

    /* Surfaces */
    surface: {
      light: '$cros.ref.neutral99',
      dark: '$cros.ref.neutral10',
    },
    surface1: {
      light: 'blend(rgba($cros.ref.primary40.rgb, 0.05), $cros.ref.neutral99)',
      dark: 'blend(rgba($cros.ref.primary80.rgb, 0.05), $cros.ref.neutral10)',
    },
    surface2: {
      light: 'blend(rgba($cros.ref.primary40.rgb, 0.08), $cros.ref.neutral99)',
      dark: 'blend(rgba($cros.ref.primary80.rgb, 0.08), $cros.ref.neutral10)',
    },
    surface3: {
      light: 'blend(rgba($cros.ref.primary40.rgb, 0.11), $cros.ref.neutral99)',
      dark: 'blend(rgba($cros.ref.primary80.rgb, 0.11), $cros.ref.neutral10)',
    },
    surface4: {
      light: 'blend(rgba($cros.ref.primary40.rgb, 0.12), $cros.ref.neutral99)',
      dark: 'blend(rgba($cros.ref.primary80.rgb, 0.12), $cros.ref.neutral10)',
    },
    surface5: {
      light: 'blend(rgba($cros.ref.primary40.rgb, 0.14), $cros.ref.neutral99)',
      dark: 'blend(rgba($cros.ref.primary80.rgb, 0.14), $cros.ref.neutral10)',
    },
    scrim: {
      light: 'rgba($cros.ref.neutralvariant60.rgb, 0.6)',
      dark:  'rgba($cros.ref.neutralvariant10.rgb, 0.6)',
    },
    'inverse-surface': {
      light: '$cros.ref.neutral20',
      dark:  '$cros.ref.neutral90',
    },
    'input-field-light': {
      light: '$cros.ref.neutral99',
      dark: 'rgba($cros.ref.neutral50.rgb, 0.4)'
    },
    'input-field-dark': {
      light: '$cros.ref.neutral95',
      dark: 'rgba($cros.ref.neutral0.rgb, 0.6)'
    },
    'system-on-base': {
      light: '$cros.ref.neutralvariant95',
      dark: 'rgba($cros.ref.neutralvariant40.rgb, 0.4)',
    },
    'system-primary-container': {
      light: '$cros.ref.primary80',
      dark: '$cros.ref.primary80',
    },
    'system-on-primary-container': {
      light: '$cros.ref.primary10',
      dark: '$cros.ref.primary10',
    },
    'system-on-primary-container-disabled': 'rgba($cros.sys.system-on-primary-container.rgb, 0.38)',

    /* Harmonized colors */
    'on-positive-container': {
      light: '$cros.ref.green30',
      dark: '$cros.ref.green90',
    },
    'positive-container': {
      light: '$cros.ref.green95',
      dark: 'blend(rgba($cros.ref.green95.rgb, 0.20), $black)',
    },
    'positive': {
      light: '$cros.ref.green50',
      dark: '$cros.ref.green80',
    },

    'on-warning-container': {
      light: '$cros.ref.yellow30',
      dark: '$cros.ref.yellow80',
    },
    'warning-container': {
      light: '$cros.ref.yellow90',
      dark: 'blend(rgba($cros.ref.yellow90.rgb, 0.20), $black)',
    },
    'warning': {
      light: '$cros.ref.yellow30',
      dark: '$cros.ref.yellow80',
    },

    'on-error-container': {
      light: '$cros.ref.red30',
      dark: '$cros.ref.red80',
    },
    'error-container': {
      light: '$cros.ref.red90',
      dark: 'blend(rgba($cros.ref.red80.rgb, 0.20), $black)',
    },
    'error': {
      light: '$cros.ref.red50',
      dark: '$cros.ref.red80',
    },

    'on-progress-container': {
      light: '$cros.ref.blue30',
      dark: '$cros.ref.blue80',
    },
    'progress-container': {
      light: '$cros.ref.blue90',
      dark: 'blend(rgba($cros.ref.blue80.rgb, 0.20), $black)',
    },
    'progress': {
      light: '$cros.ref.blue50',
      dark: '$cros.ref.blue80',
    },

    'system-on-negative-container': {
      light: '$cros.ref.red10',
      dark: '$cros.ref.red10',
    },
    'system-negative-container': {
      light: '$cros.ref.red80',
      dark: '$cros.ref.red80',
    },

    /* Text and icons */
    'on-surface': {
      light: '$cros.ref.neutral10',
      dark: '$cros.ref.neutral90',
      generate_per_mode: true,
    },
    'inverse-on-surface': {
      light: '$cros.ref.neutral95',
      dark: '$cros.ref.neutral10',
    },
    'on-surface-bodytext': {
      light: '$cros.ref.neutral40',
      dark: '$cros.ref.neutral70',
    },
    'disabled': {
      light: 'rgba($cros.sys.on-surface.rgb, 0.38)',
      dark: 'rgba($cros.sys.on-surface.rgb, 0.38)',
    },
    'disabled-container': 'rgba($cros.sys.on-surface.rgb, 0.12)',
    // TODO(b/224402466): Add cros.sys.warning
    // TODO(b/224402466): Add cros.sys.success

    // These values have a very specific meaning and should never be tinted.
    'privacy-indicator': {
      light: '#146c2e',
      dark: '#37be5f',
    },

    /* Effects */
    'hover-on-prominent': {
      light: 'rgba($cros.ref.neutral10.rgb, 0.10)',
      dark: 'rgba($cros.ref.neutral10.rgb, 0.06)',
    },
    'hover-on-subtle': {
      light: 'rgba($cros.ref.neutral10.rgb, 0.06)',
      dark: 'rgba($cros.ref.neutral99.rgb, 0.1)',
    },
    'ripple-primary': {
      light: 'rgba($cros.ref.primary70.rgb, 0.32)',
      dark: 'rgba($cros.ref.primary60.rgb, 0.32)',
    },
    'ripple-neutral-on-prominent': {
      light: 'rgba($cros.ref.neutral99.rgb, 0.16)',
      dark: 'rgba($cros.ref.neutral10.rgb, 0.08)',
    },
    'ripple-neutral-on-subtle': {
      light: 'rgba($cros.ref.neutral10.rgb, 0.12)',
      dark: 'rgba($cros.ref.neutral90.rgb, 0.16)',
    },
    'highlight-shape': {
      light: 'rgba($cros.ref.primary70.rgb, 0.3)',
      dark: 'rgba($cros.ref.primary70.rgb, 0.3)',
    },
    'highlight-text': {
      light: 'rgba($cros.ref.primary70.rgb, 0.6)',
      dark: 'rgba($cros.ref.primary70.rgb, 0.6)',
    },
    'focus-ring': {
      light: '$cros.ref.primary40',
      dark: '$cros.ref.primary80',
    },
    'shadow': {
      light: '$cros.ref.neutral30',
      dark: '$cros.ref.neutral0',
    },
    /* When the button is pressed, we layer the ripple color on top of the hover color to form the pressed color, that's what blend() does here. */
    'pressed-on-prominent': 'blend($cros.sys.hover-on-prominent, $cros.sys.ripple-neutral-on-prominent)',
    'pressed-on-subtle': 'blend($cros.sys.hover-on-subtle, $cros.sys.ripple-neutral-on-subtle)',
  },
}
