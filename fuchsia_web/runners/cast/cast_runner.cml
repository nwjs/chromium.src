// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
  include: [
    "inspect/client.shard.cml",
    "syslog/client.shard.cml",
    "vulkan/client.shard.cml",
  ],
  program: {
    runner: "elf",
    binary: "cast_runner_exe",
    args: [ "--enable-cfv2" ],
    // TODO(crbug.com/1280703): Remove once web_instance is a CFv2 component.
    lifecycle: { stop_event: "notify" },
  },
  capabilities: [
    {
      protocol: [
        "chromium.cast.DataReset",
        "fuchsia.sys.Runner",
        "fuchsia.web.Debug",
        "fuchsia.web.FrameHost",
      ]
    },
    {
      resolver: "cast-resolver",
      path: "/svc/fuchsia.component.resolution.Resolver",
    },
    {
      runner: "cast-runner",
      path: "/svc/fuchsia.component.runner.ComponentRunner",
    },

    // Used to host services provided by CFv1 and Modular, to offer to Cast
    // activities under the cast-runner.
    {
      directory: "for_dynamic_component_host",
      rights: [ "rw*" ],
      path: "/for_dynamic_component_host",
    },

  ],
  expose: [
    {
      protocol: [
        "chromium.cast.DataReset",
        "fuchsia.sys.Runner",
        "fuchsia.web.Debug",
        "fuchsia.web.FrameHost",
      ],
      from: "self",
    },
    {
      resolver: "cast-resolver",
      from: "self",
    },
    {
      runner: "cast-runner",
      from: "self",
    },
  ],
  use: [
    {
      directory: "config-data",
      rights: [ "r*" ],
      path: "/config/data",
    },
    {
      // Capabilities used by the Runner itself.
      protocol: [
        "chromium.cast.ApplicationConfigManager",
        "chromium.cast.CorsExemptHeaderProvider",
        // "fuchsia.feedback.CrashReportingProductRegister",
      ]
    },
    {
      // Capabilities used by the WebInstanceHost.
      protocol: [
        "fuchsia.feedback.ComponentDataRegister",
        "fuchsia.feedback.CrashReportingProductRegister",
        "fuchsia.sys.Environment",
        "fuchsia.sys.Loader",
      ]
    },
    {
      // Capabilities to be passed to WebEngine instances.
      protocol: [
        "fuchsia.accessibility.semantics.SemanticsManager",
        "fuchsia.buildinfo.Provider",
        "fuchsia.device.NameProvider",
        "fuchsia.fonts.Provider",
        "fuchsia.hwinfo.Product",
        "fuchsia.input.virtualkeyboard.ControllerCreator",
        "fuchsia.intl.PropertyProvider",
        "fuchsia.kernel.VmexResource",
        "fuchsia.legacymetrics.MetricsRecorder",
        "fuchsia.media.AudioDeviceEnumerator",
        "fuchsia.media.ProfileProvider",
        "fuchsia.media.SessionAudioConsumerFactory",
        "fuchsia.mediacodec.CodecFactory",
        "fuchsia.memorypressure.Provider",
        "fuchsia.net.interfaces.State",
        "fuchsia.net.name.Lookup",
        "fuchsia.posix.socket.Provider",
        "fuchsia.process.Launcher",
        "fuchsia.settings.Display",
        "fuchsia.ui.composition.Allocator",
        "fuchsia.ui.composition.Flatland",
        "fuchsia.ui.input3.Keyboard",
        "fuchsia.ui.scenic.Scenic",
      ]
    },
    {
      // Optional capabilities to be passed to WebEngine instances.
      protocol: [
        "fuchsia.camera3.DeviceWatcher",
        "fuchsia.media.Audio",
        "fuchsia.media.drm.PlayReady",
        "fuchsia.media.drm.Widevine",
        "fuchsia.tracing.perfetto.ProducerConnector",
        // "fuchsia.tracing.provider.Registry",
      ],
      availability: "optional"
    },
    {
      protocol: "fuchsia.component.Realm",
      from: "framework",
    },
    {
      storage: "cache",
      path: "/cache",
    },
  ],

  // Sections used to host Cast activities for the fuchsia.sys.Runner.
  collections: [
    {
      name: "v1-activities",
      durability: "transient",
      allowed_offers: "static_and_dynamic",
      environment: "#cast-capable-env",
    },
  ],
  environments: [
    {
      name: "cast-capable-env",
      extends: "none",
      __stop_timeout_ms: 1000,
      resolvers: [
        {
          resolver: "cast-resolver",
          from: "self",
          scheme: "cast",
	},
      ],
      runners: [
        {
          runner: "cast-runner",
          from: "self",
        },
      ],
   },
  ],
}
