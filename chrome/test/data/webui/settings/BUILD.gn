# Copyright 2020 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("../build_webui_tests.gni")

build_webui_tests("build") {
  resource_path_prefix = "settings"

  files = [
    "a11y/about_a11y_test.ts",
    "a11y/accessibility_a11y_test.ts",
    "a11y/basic_a11y_test.ts",
    "a11y/manage_profile_a11y_test.ts",
    "a11y/passwords_a11y_test.ts",
    "a11y/sign_out_a11y_test.ts",
    "about_page_tests.ts",
    "advanced_page_test.ts",
    "all_sites_tests.ts",
    "appearance_fonts_page_test.ts",
    "appearance_page_test.ts",
    "autofill_page_test.ts",
    "autofill_section_test.ts",
    "avatar_icon_test.ts",
    "basic_page_test.ts",
    "battery_page_test.ts",
    "category_default_setting_tests.ts",
    "category_setting_exceptions_tests.ts",
    "checkbox_tests.ts",
    "chooser_exception_list_entry_tests.ts",
    "chooser_exception_list_tests.ts",
    "clear_browsing_data_test.ts",
    "collapse_radio_button_tests.ts",
    "controlled_button_tests.ts",
    "controlled_radio_button_tests.ts",
    "cookies_page_test.ts",
    "do_not_track_toggle_test.ts",
    "downloads_page_test.ts",
    "dropdown_menu_tests.ts",
    "extension_controlled_indicator_tests.ts",
    "fake_settings_private.ts",
    "help_page_test.ts",
    "idle_load_tests.ts",
    "on_startup_page_tests.ts",
    "password_check_test.ts",
    "password_edit_dialog_test.ts",
    "passwords_and_autofill_fake_data.ts",
    "passwords_device_section_test.ts",
    "passwords_export_dialog_test.ts",
    "passwords_import_dialog_test.ts",
    "passwords_section_test.ts",
    "password_view_test.ts",
    "payments_section_interactive_test.ts",
    "payments_section_test.ts",
    "people_page_sync_controls_test.ts",
    "people_page_sync_page_interactive_test.ts",
    "people_page_sync_page_test.ts",
    "people_page_test.ts",
    "performance_page_test.ts",
    "personalization_options_test.ts",
    "prefs_test_cases.ts",
    "prefs_tests.ts",
    "pref_util_tests.ts",
    "preloading_page_test.ts",
    "privacy_guide_fragments_test.ts",
    "privacy_guide_page_test.ts",
    "privacy_page_test.ts",
    "privacy_sandbox_page_test.ts",
    "privacy_sandbox_test.ts",
    "protocol_handlers_tests.ts",
    "recent_site_permissions_test.ts",
    "reset_page_test.ts",
    "reset_profile_banner_test.ts",
    "review_notification_permissions_interactive_ui_test.ts",
    "review_notification_permissions_test.ts",
    "route_tests.ts",
    "safety_check_page_test.ts",
    "safety_check_permissions_test.ts",
    "safety_check_test_utils.ts",
    "search_engines_page_test.ts",
    "search_page_test.ts",
    "search_settings_test.ts",
    "secure_dns_interactive_test.ts",
    "secure_dns_test.ts",
    "security_keys_bio_enrollment_test.ts",
    "security_keys_credential_management_test.ts",
    "security_keys_reset_dialog_test.ts",
    "security_keys_set_pin_dialog_test.ts",
    "security_keys_test_util.ts",
    "security_keys_phones_subpage_test.ts",
    "security_page_test.ts",
    "settings_animated_pages_test.ts",
    "settings_category_default_radio_group_tests.ts",
    "settings_main_test.ts",
    "settings_menu_interactive_ui_test.ts",
    "settings_menu_test.ts",
    "settings_page_test_util.ts",
    "settings_performance_menu_test.ts",
    "settings_slider_tests.ts",
    "settings_subpage_test.ts",
    "settings_toggle_button_tests.ts",
    "settings_ui_tests.ts",
    "site_data_test.ts",
    "site_details_permission_tests.ts",
    "site_details_tests.ts",
    "site_entry_tests.ts",
    "site_favicon_test.ts",
    "site_list_entry_tests.ts",
    "site_list_tests.ts",
    "site_settings_page_test.ts",
    "startup_urls_page_test.ts",
    "sync_account_control_test.ts",
    "sync_test_util.ts",
    "tab_discard_exception_dialog_test.ts",
    "test_about_page_browser_proxy.ts",
    "test_clear_browsing_data_browser_proxy.ts",
    "test_extension_control_browser_proxy.ts",
    "test_hats_browser_proxy.ts",
    "test_lifetime_browser_proxy.ts",
    "test_metrics_browser_proxy.ts",
    "test_open_window_proxy.ts",
    "test_password_manager_proxy.ts",
    "test_performance_browser_proxy.ts",
    "test_performance_metrics_proxy.ts",
    "test_privacy_page_browser_proxy.ts",
    "test_privacy_sandbox_browser_proxy.ts",
    "test_profile_info_browser_proxy.ts",
    "test_reset_browser_proxy.ts",
    "test_search_engines_browser_proxy.ts",
    "test_security_keys_browser_proxy.ts",
    "test_site_settings_permissions_browser_proxy.ts",
    "test_site_settings_prefs_browser_proxy.ts",
    "test_sync_browser_proxy.ts",
    "test_util.ts",
    "unused_site_permissions_test.ts",
    "unused_site_permissions_interactive_ui_test.ts",
    "zoom_levels_tests.ts",
  ]

  if (is_chromeos_ash) {
    files += [
      "people_page_test_cros.ts",
      "site_list_tests_cros.ts",
      "test_android_info_browser_proxy.ts",
    ]
  } else {
    files += [
      "fake_language_settings_private.ts",
      "languages_page_metrics_test_browser.ts",
      "languages_page_tests.ts",
      "languages_tests.ts",
      "metrics_reporting_tests.ts",
      "people_page_manage_profile_test.ts",
      "relaunch_confirmation_dialog_test.ts",
      "spell_check_page_metrics_test_browser.ts",
      "spell_check_page_tests.ts",
      "test_languages_browser_proxy.ts",
      "test_languages_settings_metrics_proxy.ts",
      "translate_page_metrics_test_browser.ts",
      "translate_page_tests.ts",
    ]
  }

  if (is_chromeos) {
    files += [ "passwords_section_test_cros.ts" ]
  } else {
    files += [
      "default_browser_test.ts",
      "import_data_dialog_test.ts",
      "system_page_tests.ts",
    ]
  }

  if (is_mac) {
    files += [ "passkey_edit_dialog_test.ts" ]
  }

  if (!is_mac && !is_chromeos_ash) {
    files += [ "edit_dictionary_page_test.ts" ]
  }

  if (is_win || is_mac) {
    files += [ "passkeys_subpage_test.ts" ]
  }

  if (is_win && is_chrome_branded) {
    files += [ "incompatible_applications_page_test.ts" ]
  }

  ts_path_mappings = [
    # Settings tests should only be importing from one of the URLs below, so
    # that tests work both in optimize_webui=true/false modes.
    "chrome://settings/privacy_sandbox/*|" + rebase_path(
            "$root_gen_dir/chrome/browser/resources/settings/tsc/privacy_sandbox/*",
            target_gen_dir),
    "chrome://settings/settings.js|" +
        rebase_path(
            "$root_gen_dir/chrome/browser/resources/settings/tsc/settings.d.ts",
            target_gen_dir),
    "chrome://settings/lazy_load.js|" + rebase_path(
            "$root_gen_dir/chrome/browser/resources/settings/tsc/lazy_load.d.ts",
            target_gen_dir),
  ]

  ts_definitions = [
    "//tools/typescript/definitions/autofill_private.d.ts",
    "//tools/typescript/definitions/chrome_send.d.ts",
    "//tools/typescript/definitions/language_settings_private.d.ts",
    "//tools/typescript/definitions/management.d.ts",
    "//tools/typescript/definitions/passwords_private.d.ts",
    "//tools/typescript/definitions/pending.d.ts",
    "//tools/typescript/definitions/settings_private.d.ts",
  ]
  if (is_chromeos) {
    ts_definitions +=
        [ "//tools/typescript/definitions/quick_unlock_private.d.ts" ]
  }

  ts_deps = [ "//chrome/browser/resources/settings:build_ts" ]
}
