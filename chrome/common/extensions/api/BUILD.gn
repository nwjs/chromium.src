# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/json_schema_api.gni")
import("//tools/json_schema_compiler/json_features.gni")
import("schemas.gni")

assert(enable_extensions)

# GYP version: chrome/common/extensions/api/api.gyp:chrome_api
json_schema_api("api") {
  sources = schema_sources
  schemas = true
  bundle = true
  configs = [ "//build/config:precompiled_headers" ]
  bundle_name = "Chrome"

  deps = schema_dependencies
}

# GYP version: chrome/browser/extensions/api/api.gyp:chrome_api_registration
json_schema_api("api_registration") {
  sources = schema_sources
  impl_dir = "//chrome/browser/extensions/api"
  bundle_registration = true
  configs = [ "//build/config:precompiled_headers" ]
  bundle_name = "Chrome"

  deps = [
    # Different APIs include headers from these targets.
    "//content/public/browser",
    "//extensions/browser",

    # Different APIs include some headers from chrome/common that in turn
    # include generated headers from these targets.
    # TODO(brettw) this should be made unnecessary if possible.
    ":api",
    "//components/metrics/proto",
    "//components/sync",
    "//skia",
    "//ui/accessibility:ax_gen",
  ]
  if (is_chromeos) {
    deps += [ "//components/drive:proto" ]
  }
  deps += schema_dependencies
}

json_features("api_features") {
  feature_class = "APIFeature"
  provider_class = "APIFeatureProvider"
  sources = [
    "../../../../extensions/common/api/_api_features.json",
    "../../../../content/nw/src/api/_api_features.json",
    "_api_features.json",
  ]
}

json_features("permission_features") {
  feature_class = "PermissionFeature"
  provider_class = "PermissionFeatureProvider"
  sources = [
    "../../../../extensions/common/api/_permission_features.json",
    "_permission_features.json",
  ]
}

json_features("manifest_features") {
  feature_class = "ManifestFeature"
  provider_class = "ManifestFeatureProvider"
  sources = [
    "../../../../extensions/common/api/_manifest_features.json",
    "_manifest_features.json",
  ]
}

json_features("behavior_features") {
  feature_class = "BehaviorFeature"
  provider_class = "BehaviorFeatureProvider"
  sources = [
    "../../../../extensions/common/api/_behavior_features.json",
  ]
}

group("extensions_features") {
  public_deps = [
    ":api_features",
    ":behavior_features",
    ":manifest_features",
    ":permission_features",
  ]
}
