# Copyright 2019 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//chrome/browser/resources/tools/optimize_webui.gni")
import("//chrome/common/features.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/polymer/html_to_wrapper.gni")
import("//ui/webui/resources/tools/generate_grd.gni")
import("//ui/webui/webui_features.gni")
import("./new_tab_page.gni")
import("./preprocess_if_expr_sourcemaps.gni")
import("./ts_library_sourcemaps.gni")

assert(!is_android)

grd_prefix = "new_tab_page"
preprocess_folder = "preprocessed"

if (optimize_webui) {
  build_manifest = "build_manifest.json"
}

preprocess_if_expr_sourcemaps("preprocess") {
  defines = [ "is_official_build=$is_official_build" ]
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = ts_files
}

preprocess_if_expr("preprocess_html") {
  defines = [ "is_official_build=$is_official_build" ]
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = html_files
}

html_to_wrapper("html_wrapper_files") {
  deps = [ ":preprocess_html" ]
  in_folder = "$target_gen_dir/$preprocess_folder"
  out_folder = "$target_gen_dir/$preprocess_folder"
  in_files = html_files
  minify = optimize_webui
}

# Copy all Mojom generated JS files used by the NTP to a common location so that
# TS compiler can find them when resolving relative paths.
copy("copy_mojom") {
  deps = [
    "//chrome/browser/cart:mojo_bindings_ts__generator",
    "//chrome/browser/new_tab_page/modules/drive:mojo_bindings_ts__generator",
    "//chrome/browser/new_tab_page/modules/feed:mojo_bindings_ts__generator",
    "//chrome/browser/new_tab_page/modules/photos:mojo_bindings_ts__generator",
    "//chrome/browser/new_tab_page/modules/recipes:mojo_bindings_ts__generator",
    "//chrome/browser/ui/webui/new_tab_page:mojo_bindings_ts__generator",
  ]
  sources = [
    "$root_gen_dir/chrome/browser/cart/chrome_cart.mojom-webui.ts",
    "$root_gen_dir/chrome/browser/new_tab_page/modules/drive/drive.mojom-webui.ts",
    "$root_gen_dir/chrome/browser/new_tab_page/modules/feed/feed.mojom-webui.ts",
    "$root_gen_dir/chrome/browser/new_tab_page/modules/photos/photos.mojom-webui.ts",
    "$root_gen_dir/chrome/browser/new_tab_page/modules/recipes/recipes.mojom-webui.ts",
    "$root_gen_dir/chrome/browser/ui/webui/new_tab_page/new_tab_page.mojom-webui.ts",
  ]

  if (!is_official_build) {
    deps += [
      "//chrome/browser/ui/webui/new_tab_page/foo:mojo_bindings_ts__generator",
    ]
    sources += [ "$root_gen_dir/chrome/browser/ui/webui/new_tab_page/foo/foo.mojom-webui.ts" ]
  }

  outputs = [ "$target_gen_dir/$preprocess_folder/{{source_file_part}}" ]
}

if (optimize_webui) {
  # Register all mojo files to their own grdp, since they are excluded from the
  # bundle on optimized builds and need to be registered separately.
  generate_grd("build_mojo_grdp") {
    grd_prefix = grd_prefix
    out_grd = "$target_gen_dir/mojo_resources.grdp"
    input_files = mojo_js_files
    input_files_base_dir = rebase_path("$target_gen_dir/tsc", root_build_dir)
    deps = [ ":build_ts" ]
  }
}

grit("resources") {
  defines = chrome_grit_defines + [ "is_official_build=$is_official_build" ]

  enable_input_discovery_for_gn_analyze = false
  source = "$target_gen_dir/resources.grd"

  deps = [ ":build_grd" ]

  outputs = [
    "grit/new_tab_page_resources.h",
    "grit/new_tab_page_resources_map.cc",
    "grit/new_tab_page_resources_map.h",
    "new_tab_page_resources.pak",
  ]
  output_dir = "$root_gen_dir/chrome"
}

if (optimize_webui) {
  optimize_webui("optimized_js") {
    host = "new-tab-page"
    input = rebase_path("$target_gen_dir/tsc", root_build_dir)
    deps = [ ":build_ts" ]
    js_module_in_files = [
      "new_tab_page.js",
      "lazy_load.js",
    ]
    out_manifest = "$target_gen_dir/$build_manifest"
    excludes = [
                 "chrome://resources/cr_components/color_change_listener/color_change_listener.mojom-webui.js",
                 "chrome://resources/cr_components/customize_themes/customize_themes.mojom-webui.js",
                 "chrome://resources/cr_components/most_visited/most_visited.mojom-webui.js",
                 "chrome://resources/cr_components/omnibox/omnibox.mojom-webui.js",
                 "chrome://resources/js/browser_command/browser_command.mojom-webui.js",
                 "chrome://resources/js/cr.js",
                 "chrome://resources/js/metrics_reporter/metrics_reporter.mojom-webui.js",
                 "chrome://resources/mojo/mojo/public/js/bindings.js",
                 "chrome://resources/mojo/mojo/public/mojom/base/string16.mojom-webui.js",
                 "chrome://resources/mojo/mojo/public/mojom/base/text_direction.mojom-webui.js",
                 "chrome://resources/mojo/mojo/public/mojom/base/time.mojom-webui.js",
                 "chrome://resources/mojo/skia/public/mojom/skcolor.mojom-webui.js",
                 "chrome://resources/mojo/url/mojom/url.mojom-webui.js",
               ] + mojo_js_files
  }
}

ts_library_sourcemaps("build_ts") {
  root_dir = "$target_gen_dir/$preprocess_folder"
  out_dir = "$target_gen_dir/tsc"
  composite = true
  if (enable_webui_inline_sourcemaps) {
    tsconfig_base = "tsconfig_base_sourcemaps.json"
  } else {
    tsconfig_base = "tsconfig_base.json"
  }
  in_files = ts_files + html_wrapper_files + mojo_ts_files

  deps = [
    "//third_party/polymer/v3_0:library",
    "//ui/webui/resources:library",
    "//ui/webui/resources/cr_components/color_change_listener:build_ts",
    "//ui/webui/resources/cr_components/customize_themes:build_ts",
    "//ui/webui/resources/cr_components/most_visited:build_ts",
    "//ui/webui/resources/cr_components/omnibox:build_ts",
    "//ui/webui/resources/js/browser_command:build_ts",
    "//ui/webui/resources/js/metrics_reporter:build_ts",
  ]

  definitions = [
    "//tools/typescript/definitions/metrics_private.d.ts",
    "//tools/typescript/definitions/pending.d.ts",
  ]

  extra_deps = [
    ":copy_mojom",
    ":html_wrapper_files",
    ":preprocess",
  ]
}

generate_grd("build_grd") {
  grd_prefix = grd_prefix
  out_grd = "$target_gen_dir/resources.grd"
  input_files = [
    "new_tab_page.html",
    "shared_vars.css",
    "modules/chromefetti.svg",
    "untrusted/background_image.html",
    "untrusted/background_image.js",
    "untrusted/image.html",
    "untrusted/one_google_bar.html",
    "untrusted/one_google_bar.js",
  ]
  input_files_base_dir = rebase_path(".", "//")

  grdp_files = [
    "$target_gen_dir/icons/resources.grdp",
    "$target_gen_dir/modules/cart/icons/resources.grdp",
    "$target_gen_dir/modules/feed/icons/resources.grdp",
    "$target_gen_dir/modules/photos/icons/resources.grdp",
    "$target_gen_dir/modules/photos/images/resources.grdp",
    "$target_gen_dir/modules/recipes_v2/icons/resources.grdp",
  ]

  deps = [
    "icons:build_grdp",
    "modules/cart/icons:build_grdp",
    "modules/feed/icons:build_grdp",
    "modules/photos/icons:build_grdp",
    "modules/photos/images:build_grdp",
    "modules/recipes_v2/icons:build_grdp",
  ]

  if (optimize_webui) {
    deps += [
      ":build_mojo_grdp",
      ":optimized_js",
    ]
    resource_path_rewrites = [
      "new_tab_page.rollup.js|new_tab_page.js",
      "lazy_load.rollup.js|lazy_load.js",
    ]
    manifest_files = [ "$target_gen_dir/$build_manifest" ]
    grdp_files += [ "$target_gen_dir/mojo_resources.grdp" ]
  } else {
    deps += [ ":build_ts" ]
    manifest_files =
        filter_include(get_target_outputs(":build_ts"), [ "*.manifest" ])
  }
}
