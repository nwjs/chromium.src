// Copyright 2022 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module side_panel.mojom;

import "mojo/public/mojom/base/time.mojom";
import "mojo/public/mojom/base/token.mojom";
import "url/mojom/url.mojom";

// Data structure representing a note.
struct Note {
  //unique identifier of the note.
  string guid;

  // URL of the page where the note is created.
  url.mojom.Url url;

  // Last modification time of the note.
  mojo_base.mojom.Time last_modification_time;

  // Last modification time text to display
  string last_modification_time_text;

  // Text of the note.
  string text;
};

// Data structure representing a note overview.
struct NoteOverview {
  // URL of the page.
  url.mojom.Url url;

  // Title of the corresponding bookmark, or URL if no bookmarks found.
  string title;

  // The text of the first (matched) note of this URL.
  string text;

  // The number of notes added to this URL.
  int32 num_notes;

  // Whether the overview item is the current tab.
  bool is_current_tab;

  // The last modification time of the notes from the url.
  mojo_base.mojom.Time last_modification_time;
};

// Used by the WebUI page to bootstrap bidirectional communication.
interface UserNotesPageHandlerFactory {
  // The WebUI calls this method when the page is first initialized.
  CreatePageHandler(pending_remote<UserNotesPage> page,
                    pending_receiver<UserNotesPageHandler> handler);
};

// Browser-side handler for requests from WebUI page.
interface UserNotesPageHandler {
  // Notify the backend that the UI is ready to be shown.
  ShowUI();

  // API to render view all notes UI.
  // User input can be empty (initial case) or non-empty (search case).
  GetNoteOverviews(string user_input) => (array<NoteOverview> overviews);

  // API to render view notes in tabs UI.
  GetNotesForCurrentTab() => (array<Note> notes);

  // Called when finishing a new note from the UI.
  NewNoteFinished(string text) => (bool success);

  // Called when updating a note from the UI.
  UpdateNote(string guid, string text) => (bool success);

  // Called when deleting a note from the UI.
  DeleteNote(string guid) => (bool success);

  // Called when deleting all notes for a url.
  DeleteNotesForUrl(url.mojom.Url url) => (bool success);
};

// WebUI-side handler for requests from the browser.
interface UserNotesPage {
  // Called when notes are changed.
  // It could be caused by note changes from local change or from sync.
  // This may/may not trigger a reload immediately.
  // If the WebUI is in the background we can delay reloading until it is
  // foregrounded.
  NotesChanged();

  // Called when the URL of the current tab has changed.
  // This could be triggered by either switching tab or navigating to
  // a new URL.
  CurrentTabUrlChanged();
};
